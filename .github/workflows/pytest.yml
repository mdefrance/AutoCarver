name: pytest

on:
  push:
    branches:
      - 'dev*'
  pull_request:
    branches:
      - main

jobs:
  pytest_push:
    runs-on: ubuntu-latest

    # runs only on push
    if: ${{ github.event_name == 'push' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root -E tests
      #----------------------------------------------
      # installing AutoCarver
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -v --cov ${{ github.workspace }}/tests/
      
      - name: Pylint
        run: |
          cd ${{ github.workspace }}
          source .venv/bin/activate
          black --check .
          isort . --check-only
          pylint $(find . -name "*.py" | xargs) --fail-under=8
          # flake8 . 

  pytest_pull:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    # runs only on pull_request
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root -E tests
      - name: Install AutoCarver
        run: poetry install --no-interaction

      - run: |
          source .venv/scripts/activate
          pytest -v --cov ${{ github.workspace }}/tests/
        if: runner.os == 'Windows'
      - run: |
          source .venv/bin/activate
          pytest -v --cov ${{ github.workspace }}/tests/
        if: runner.os != 'Windows'
          
  